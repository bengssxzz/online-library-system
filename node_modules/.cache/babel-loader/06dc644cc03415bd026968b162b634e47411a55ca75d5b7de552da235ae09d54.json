{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Junior\\\\Documents\\\\GitHub\\\\CS134-1P-Journal-Archive-Management-System\\\\frontend\\\\online-library-system\\\\src\\\\pages\\\\pdfMonitor.js\";\nimport { useState, useEffect } from 'react';\nimport Sidebar from \"../components/sidebar\";\nimport Pagination from '../components/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PDFMonitor() {\n  // const [pdfStats, setPdfStats] = useState([]);\n\n  // const [loading, setLoading] = useState(false);\n  // const [currentPage, setCurrentpage] = useState(1);\n  // const [postsPerPage, setPostsperpage] = useState(5); //Post per page\n\n  // const [sortingType, setSortingType] = useState(1) //1: Ascending || -1: Descending\n\n  // useEffect(() => {\n  //     fetch('http://localhost:8081/pdf-statistics')\n  //         .then(res => res.json())\n  //         .then(pdfStats => setPdfStats(pdfStats))\n  //         .catch(err => console.log(err));\n  // }, []);\n\n  // //Get current posts\n  // const indexOfLastPost = currentPage * postsPerPage;\n  // const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  // const currentPost = pdfStats\n  //     .sort((a, b) => {\n  //         return sortingType * a.title.localeCompare(b.title)\n  //     })\n  //     .slice(indexOfFirstPost, indexOfLastPost);\n\n  // //Change page\n  // const paginate = (pageNumber) => setCurrentpage(pageNumber);\n  // const setPostCount = (postCount) => setPostsperpage(postCount);\n  // const sorting = (type) => setSortingType(type)\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"tw-flex tw-bg-gray-50 tw-min-h-dvh\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"tw-gap-x-[30px] tw-w-full md:tw-mx-20 md:tw-mt-[100px] sm:tw-m-5 tw-align-top\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          class: \"table table-striped tw-text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"thead\", {\n            class: \"tw-text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"View Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Download Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = PDFMonitor;\nvar _c;\n$RefreshReg$(_c, \"PDFMonitor\");","map":{"version":3,"names":["useState","useEffect","Sidebar","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","PDFMonitor","children","class","fileName","_jsxFileName","lineNumber","columnNumber","scope","_c","$RefreshReg$"],"sources":["C:/Users/Junior/Documents/GitHub/CS134-1P-Journal-Archive-Management-System/frontend/online-library-system/src/pages/pdfMonitor.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Sidebar from \"../components/sidebar\"\r\nimport Pagination from '../components/Pagination';\r\n\r\nexport default function PDFMonitor() {\r\n    // const [pdfStats, setPdfStats] = useState([]);\r\n\r\n    // const [loading, setLoading] = useState(false);\r\n    // const [currentPage, setCurrentpage] = useState(1);\r\n    // const [postsPerPage, setPostsperpage] = useState(5); //Post per page\r\n\r\n    // const [sortingType, setSortingType] = useState(1) //1: Ascending || -1: Descending\r\n\r\n    // useEffect(() => {\r\n    //     fetch('http://localhost:8081/pdf-statistics')\r\n    //         .then(res => res.json())\r\n    //         .then(pdfStats => setPdfStats(pdfStats))\r\n    //         .catch(err => console.log(err));\r\n    // }, []);\r\n\r\n    // //Get current posts\r\n    // const indexOfLastPost = currentPage * postsPerPage;\r\n    // const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    // const currentPost = pdfStats\r\n    //     .sort((a, b) => {\r\n    //         return sortingType * a.title.localeCompare(b.title)\r\n    //     })\r\n    //     .slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    // //Change page\r\n    // const paginate = (pageNumber) => setCurrentpage(pageNumber);\r\n    // const setPostCount = (postCount) => setPostsperpage(postCount);\r\n    // const sorting = (type) => setSortingType(type)\r\n    return (\r\n        <>\r\n            <div class=\"tw-flex tw-bg-gray-50 tw-min-h-dvh\">\r\n                <div>\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div class=\"tw-gap-x-[30px] tw-w-full md:tw-mx-20 md:tw-mt-[100px] sm:tw-m-5 tw-align-top\">\r\n                    <table class=\"table table-striped tw-text-center\">\r\n                        <thead class=\"tw-text-center\">\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Title</th>\r\n                                <th scope=\"col\">View Count</th>\r\n                                <th scope=\"col\">Download Count</th>\r\n                            </tr>\r\n\r\n                        </thead>\r\n\r\n                        {/* <tbody>\r\n                            {currentPost.map((d, i) => (\r\n                                <tr key={i}>\r\n                                    <th scope=\"row\">{i + 1}</th>\r\n                                    <td>{d.title}</td>\r\n                                    <td>{d.view}</td>\r\n                                    <td>{d.download}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody> */}\r\n                    </table>\r\n\r\n                    {/* <Pagination postsPerPage={postsPerPage} setPostsPerPage={setPostCount} totalPosts={pdfStats.length} paginate={paginate} sortType={sortingType} setSortType={sorting} /> */}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,eAAe,SAASC,UAAUA,CAAA,EAAG;EACjC;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACIJ,OAAA;MAAKK,KAAK,EAAC,oCAAoC;MAAAD,QAAA,gBAC3CJ,OAAA;QAAAI,QAAA,eACIJ,OAAA,CAACH,OAAO;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eAENT,OAAA;QAAKK,KAAK,EAAC,+EAA+E;QAAAD,QAAA,eACtFJ,OAAA;UAAOK,KAAK,EAAC,oCAAoC;UAAAD,QAAA,eAC7CJ,OAAA;YAAOK,KAAK,EAAC,gBAAgB;YAAAD,QAAA,eACzBJ,OAAA;cAAAI,QAAA,gBACIJ,OAAA;gBAAIU,KAAK,EAAC,KAAK;gBAAAN,QAAA,EAAC;cAAC;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACtBT,OAAA;gBAAIU,KAAK,EAAC,KAAK;gBAAAN,QAAA,EAAC;cAAK;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC1BT,OAAA;gBAAIU,KAAK,EAAC,KAAK;gBAAAN,QAAA,EAAC;cAAU;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC/BT,OAAA;gBAAIU,KAAK,EAAC,KAAK;gBAAAN,QAAA,EAAC;cAAc;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACR,CAAC;AAEX;AAACE,EAAA,GAjEuBR,UAAU;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}