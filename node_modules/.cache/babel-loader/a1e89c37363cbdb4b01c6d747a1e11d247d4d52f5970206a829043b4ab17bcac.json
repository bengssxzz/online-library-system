{"ast":null,"code":"import{useState,useEffect}from'react';import Sidebar from\"../components/sidebar\";import Pagination from'../components/Pagination';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function PDFMonitor(){const[pdfStats,setPdfStats]=useState([]);const[loading,setLoading]=useState(false);const[currentPage,setCurrentpage]=useState(1);const[postsPerPage,setPostsperpage]=useState(5);//Post per page\nconst[sortingType,setSortingType]=useState(1);//1: Ascending || -1: Descending\nuseEffect(()=>{fetch('https://online-library-system-api.onrender.com/pdf-statistics').then(res=>res.json()).then(pdfStats=>setPdfStats(pdfStats)).catch(err=>console.log(err));},[]);//Get current posts\nconst indexOfLastPost=currentPage*postsPerPage;const indexOfFirstPost=indexOfLastPost-postsPerPage;const currentPost=pdfStats.sort((a,b)=>{return sortingType*a.title.localeCompare(b.title);}).slice(indexOfFirstPost,indexOfLastPost);//Change page\nconst paginate=pageNumber=>setCurrentpage(pageNumber);const setPostCount=postCount=>setPostsperpage(postCount);const sorting=type=>setSortingType(type);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{class:\"tw-flex tw-bg-gray-50 tw-min-h-dvh\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Sidebar,{})}),/*#__PURE__*/_jsxs(\"div\",{class:\"tw-gap-x-[30px] tw-w-full md:tw-mx-20 md:tw-mt-[100px] sm:tw-m-5 tw-align-top\",children:[/*#__PURE__*/_jsxs(\"table\",{class:\"table table-striped tw-text-center\",children:[/*#__PURE__*/_jsx(\"thead\",{class:\"tw-text-center\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"#\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Title\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"View Count\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Download Count\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:currentPost.map((d,i)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"row\",children:i+1}),/*#__PURE__*/_jsx(\"td\",{children:d.title}),/*#__PURE__*/_jsx(\"td\",{children:d.view}),/*#__PURE__*/_jsx(\"td\",{children:d.download})]},i))})]}),/*#__PURE__*/_jsx(Pagination,{postsPerPage:postsPerPage,setPostsPerPage:setPostCount,totalPosts:pdfStats.length,paginate:paginate,sortType:sortingType,setSortType:sorting})]})]})});}","map":{"version":3,"names":["useState","useEffect","Sidebar","Pagination","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PDFMonitor","pdfStats","setPdfStats","loading","setLoading","currentPage","setCurrentpage","postsPerPage","setPostsperpage","sortingType","setSortingType","fetch","then","res","json","catch","err","console","log","indexOfLastPost","indexOfFirstPost","currentPost","sort","a","b","title","localeCompare","slice","paginate","pageNumber","setPostCount","postCount","sorting","type","children","class","scope","map","d","i","view","download","setPostsPerPage","totalPosts","length","sortType","setSortType"],"sources":["C:/Users/Junior/Documents/GitHub/CS134-1P-Journal-Archive-Management-System/frontend/online-library-system/src/pages/pdfMonitor.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Sidebar from \"../components/sidebar\"\r\nimport Pagination from '../components/Pagination';\r\n\r\nexport default function PDFMonitor() {\r\n    const [pdfStats, setPdfStats] = useState([]);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [currentPage, setCurrentpage] = useState(1);\r\n    const [postsPerPage, setPostsperpage] = useState(5); //Post per page\r\n\r\n    const [sortingType, setSortingType] = useState(1) //1: Ascending || -1: Descending\r\n\r\n    useEffect(() => {\r\n        fetch('https://online-library-system-api.onrender.com/pdf-statistics')\r\n            .then(res => res.json())\r\n            .then(pdfStats => setPdfStats(pdfStats))\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    //Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPost = pdfStats\r\n        .sort((a, b) => {\r\n            return sortingType * a.title.localeCompare(b.title)\r\n        })\r\n        .slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    //Change page\r\n    const paginate = (pageNumber) => setCurrentpage(pageNumber);\r\n    const setPostCount = (postCount) => setPostsperpage(postCount);\r\n    const sorting = (type) => setSortingType(type)\r\n    return (\r\n        <>\r\n            <div class=\"tw-flex tw-bg-gray-50 tw-min-h-dvh\">\r\n                <div>\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div class=\"tw-gap-x-[30px] tw-w-full md:tw-mx-20 md:tw-mt-[100px] sm:tw-m-5 tw-align-top\">\r\n                    <table class=\"table table-striped tw-text-center\">\r\n                        <thead class=\"tw-text-center\">\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Title</th>\r\n                                <th scope=\"col\">View Count</th>\r\n                                <th scope=\"col\">Download Count</th>\r\n                            </tr>\r\n\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {currentPost.map((d, i) => (\r\n                                <tr key={i}>\r\n                                    <th scope=\"row\">{i + 1}</th>\r\n                                    <td>{d.title}</td>\r\n                                    <td>{d.view}</td>\r\n                                    <td>{d.download}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <Pagination postsPerPage={postsPerPage} setPostsPerPage={setPostCount} totalPosts={pdfStats.length} paginate={paginate} sortType={sortingType} setSortType={sorting} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}