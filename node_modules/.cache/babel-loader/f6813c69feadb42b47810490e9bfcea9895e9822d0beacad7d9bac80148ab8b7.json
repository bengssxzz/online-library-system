{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Junior\\\\Documents\\\\GitHub\\\\CS134-1P-Journal-Archive-Management-System\\\\frontend\\\\online-library-system\\\\src\\\\components\\\\Pagination.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = ({\n  postsPerPage,\n  setPostsPerPage,\n  totalPosts,\n  paginate,\n  sortType,\n  setSortType\n}) => {\n  _s();\n  const [postPerPage, setPostPerPage] = useState(postsPerPage);\n  const pageNumbers = [];\n  const change = event => {\n    if (event.target.value === \"\") {} else {\n      setPostsPerPage(event.target.value);\n    }\n  };\n  const posts = event => {\n    setPostsPerPage = event.target.value;\n  };\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      class: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSortType(sortType * -1),\n        children: \"Sorting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: postPerPage,\n        onChange: change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n        class: \"page-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => paginate(number),\n          href: \"##\",\n          class: \"page-link\",\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Pagination, \"doxMW5xjhF2Xra+9cGaayWlJx5w=\");\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Pagination","postsPerPage","setPostsPerPage","totalPosts","paginate","sortType","setSortType","_s","postPerPage","setPostPerPage","pageNumbers","change","event","target","value","posts","i","Math","ceil","push","children","class","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","map","number","href","_c","$RefreshReg$"],"sources":["C:/Users/Junior/Documents/GitHub/CS134-1P-Journal-Archive-Management-System/frontend/online-library-system/src/components/Pagination.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from \"react\"\r\n\r\nconst Pagination = ({ postsPerPage, setPostsPerPage, totalPosts, paginate, sortType, setSortType }) => {\r\n    const [postPerPage, setPostPerPage] = useState(postsPerPage)\r\n\r\n    const pageNumbers = [];\r\n\r\n    const change = (event) => {\r\n        if (event.target.value === \"\") {\r\n\r\n        } else {\r\n            setPostsPerPage(event.target.value)\r\n        }\r\n    }\r\n    const posts = (event) => {\r\n        setPostsPerPage = event.target.value\r\n    }\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul class=\"pagination\">\r\n                <button onClick={() => setSortType(sortType * -1)}>Sorting</button>\r\n                <input type='number' value={postPerPage} onChange={change} />\r\n                {pageNumbers.map(number => (\r\n                    <li key={number} class=\"page-item\">\r\n                        <a onClick={() => paginate(number)} href=\"##\" class='page-link'>\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,YAAY;EAAEC,eAAe;EAAEC,UAAU;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACnG,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAACI,YAAY,CAAC;EAE5D,MAAMS,WAAW,GAAG,EAAE;EAEtB,MAAMC,MAAM,GAAIC,KAAK,IAAK;IACtB,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,KAAK,EAAE,EAAE,CAE/B,CAAC,MAAM;MACHZ,eAAe,CAACU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACvC;EACJ,CAAC;EACD,MAAMC,KAAK,GAAIH,KAAK,IAAK;IACrBV,eAAe,GAAGU,KAAK,CAACC,MAAM,CAACC,KAAK;EACxC,CAAC;EAED,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIC,IAAI,CAACC,IAAI,CAACf,UAAU,GAAGF,YAAY,CAAC,EAAEe,CAAC,EAAE,EAAE;IAC5DN,WAAW,CAACS,IAAI,CAACH,CAAC,CAAC;EACvB;EAEA,oBACIjB,OAAA;IAAAqB,QAAA,eACIrB,OAAA;MAAIsB,KAAK,EAAC,YAAY;MAAAD,QAAA,gBAClBrB,OAAA;QAAQuB,OAAO,EAAEA,CAAA,KAAMhB,WAAW,CAACD,QAAQ,GAAG,CAAC,CAAC,CAAE;QAAAe,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACnE3B,OAAA;QAAO4B,IAAI,EAAC,QAAQ;QAACb,KAAK,EAAEN,WAAY;QAACoB,QAAQ,EAAEjB;MAAO;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC5DhB,WAAW,CAACmB,GAAG,CAACC,MAAM,iBACnB/B,OAAA;QAAiBsB,KAAK,EAAC,WAAW;QAAAD,QAAA,eAC9BrB,OAAA;UAAGuB,OAAO,EAAEA,CAAA,KAAMlB,QAAQ,CAAC0B,MAAM,CAAE;UAACC,IAAI,EAAC,IAAI;UAACV,KAAK,EAAC,WAAW;UAAAD,QAAA,EAC1DU;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC,GAHCI,MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAAnB,EAAA,CAnCKP,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAqChB,eAAeA,UAAU;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}